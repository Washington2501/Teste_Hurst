Cenário Cadastrar usuário:
EU como cliente
QUANDO tentar cadastrar um novo usuário no sistema
ENTÃO eu devo ter um usuário devidamente cadastrado na base de dados
E o usuário pode ser consultado pela aplicação

Cenário 1: Cadastrar usuário - CPF correto
DADO um usuário com CPF matematicamente válido
QUANDO solicitada o cadastro de um novo usuário via endpoint '/auth/sign-up'
ENTÃO o usuário deve ser cadastrado no sistema

Cenário 2: Cadastrar usuário - CPF incorreto
DADO um usuário com CPF matematicamente inválido
QUANDO solicitada o cadastro de um novo usuário via endpoint '/auth/sign-up'
ENTÃO a requisição deve retornar um HTTP statusCode 400 - Bad Request
E o usuário não deve ser cadastrado no sistema

Cenário 3: Cadastrar usuário - E-mail incorreto
DADO um usuário com um E-mail com formatação incorreta
QUANDO solicitada o cadastro de um novo usuário via endpoint '/auth/sign-up'
ENTÃO a requisição deve retornar um HTTP statusCode 422 - Unprocessable Entity
E o usuário não deve ser cadastrado no sistema

————————————————————————————————————————————

Cenário Login de usuário:
EU como usuário já cadastrado no sistema
QUANDO tentar realizar o Login na minha conta
ENTÃO eu devo conseguir realizar o login

Cenário 1: Login com usuário cadastrado
DADO um usuário cadastrado
QUANDO solicitado o login do usuário via endpoint ‘/auth/sign-in’ 
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o login deve ser realizado

Cenário 2: Login com senha errada
DADO um usuário cadastrado com senha incorreta
QUANDO solicitado o login do usuário via endpoint ‘/auth/sign-in’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Unauthorized
E a aplicação deve retornar uma mensagem de erro 

Cenário 3: Login com email incorreto
DADO um usuário cadastrado com email incorreto
QUANDO solicitado o login do usuário via endpoint ‘/auth/sign-in’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Unauthorized
E a aplicação deve retornar uma mensagem de erro 

————————————————————————————————————————————

Cenário Pesquisar usuário:
EU como usuário já cadastrado no sistema
QUANDO tentar pesquisar um usuário no sistema
ENTÃO eu devo receber o usuário cadastrado na base de dados

Cenário 1: Pesquisar usuário existente
DADO um usuário já cadastrado e existente na base
QUANDO solicitada a pesquisa de um usuário via endpoint ‘/account’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E os dados do usuário cadastrado devem ser exibidos

Cenário 2: Pesquisar usuário inexistente
DADO um usuário com token incorreto
QUANDO solicitada a pesquisa de um usuário via endpoint ‘/account’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Anauthorized
E os dados do usuário não devem ser exibidos

————————————————————————————————————————————

Cenário Criar ‘todo’ de usuário:
EU como usuário já cadastrado no sistema
QUANDO solicitar criar um ‘todo’ ao meu usuário
ENTÃO eu devo receber um ‘todo’ cadastrado para o meu usuário

Cenário 1: Criar ‘todo’ corretamente
DADO um usuário cadastrado
QUANDO solicitado criar um ‘todo’ para o usuário via endpoint ‘/todo’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o ‘todo’ cadastrado do usuário deve ser exibido

————————————————————————————————————————————

Cenário Adicionar ‘todo’ a usuário:
EU como usuário já cadastrado no sistema
QUANDO cadastrar um ‘todo’ ao meu usuário
ENTÃO eu devo receber um ‘todo’ cadastrado para o meu usuário

Cenário 1: Adicionar ‘todo’ ao usuário corretamente
DADO um usuário cadastrado
QUANDO solicitado adicionar um ‘todo’ para o usuário via endpoint ‘/todo/batch’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o ‘todo’ cadastrado do usuário deve ser exibido

————————————————————————————————————————————

Cenário Obter um  “todo” de um usuário:
EU como usuário já cadastrado no sistema
QUANDO solicitar obter um ‘todo’ do meu usuário baseado em seu id
ENTÃO eu devo receber somente o ‘todo’ solicitado

Cenário 1: Obter um ‘todo’ de usuário
DADO um usuário cadastrado
E com pelo menos um ‘todo’ cadastrado em sua conta
QUANDO solicitado obter um ‘todo’ baseado em seu id via endpoint ‘/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o ‘todo’ solicitado deve ser retornado

Cenário 2: Obter um ‘todo’ de usuário com id incorreto
DADO um usuário cadastrado
E com pelo menos um ‘todo’ cadastrado em sua conta
QUANDO solicitado obter um ‘todo’ baseado em seu id via endpoint ‘/todo/{todoId}’
E com o Id incorreto ou inexistente
ENTÃO a requisição deve retornar HTTP statusCode 404 - not_found
E o ‘todo’ solicitado não deve ser retornada

————————————————————————————————————————————

Cenário Obter todos os “todo’s” de um usuário:
EU como usuário já cadastrado no sistema
QUANDO solicitar obter todos os ‘todo’ do meu usuário
ENTÃO eu devo receber todos os ‘todo’ cadastrados para o meu usuário

Cenário 1: Obter todos os “todo’s” de um usuário existente
DADO um usuário cadastrado
E com pelo menos um ‘todo’ cadastrado em sua conta
QUANDO solicitado obter todos os “todo’s” de sua conta via endpoint ‘/todo’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E a aplicação deve retornar a lista de todos os “todo’s” cadastrados para o usuário

Cenário 2: Obter todos os “todo’s” de um usuário inexistente
DADO um usuário inexistente
QUANDO solicitado obter todos os “todo’s” de sua conta via endpoint ‘/todo’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Unauthorized
E a aplicação deve retornar uma mensagem de erro

————————————————————————————————————————————

Cenário Atualizar um ‘todo’ de um usuário:
EU como usuário já cadastrado no sistema
QUANDO atualizar um dado em específico de um ‘todo’ da minha conta
ENTÃO eu devo receber os dados do ‘todo’ já atualizados

Cenário 1: Atualizar ‘todo’ de usuário existente
DADO um usuário já cadastrado
QUANDO solicitada a atualização de algum campo do ‘toto’ do usuário via endpoint ‘/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E os dados atualizados do ‘todo’ do usuário devem ser exibidos

Cenário 2: Atualizar ‘todo’ de usuário inexistente
DADO um usuário inexistente na base
QUANDO solicitada a atualização de algum campo do ‘toto’ do usuário via endpoint ‘/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Unauthorized
E uma mensagem de erro deve ser exibida na resposta

————————————————————————————————————————————

Cenário Deletar ‘todo’ de um usuário:
EU como usuário já cadastrado no sistema
QUANDO tentar deletar um ‘todo’ em específico do meu usuário
ENTÃO o ‘todo’ do usuário deve ser apagado do sistema

Cenário 1: Deletar ‘todo’ de usuário existente
DADO um usuário existente na base
QUANDO solicitada a deleção de um ‘todo’ do usuário via endpoint ‘/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o usuário deve ser deletado

Cenário 2: Deletar ‘todo’ de usuário inexistente
DADO um usuário inexistente na base
QUANDO solicitada a deleção do ‘todo’ do usuário via endpoint ‘/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 401 - Anauthorized
E uma mensagem de erro deve ser retornada

————————————————————————————————————————————

Cenário Deletar usuário:
EU como usuário já cadastrado no sistema
QUANDO tentar deletar um usuário cadastrado no sistema
ENTÃO o usuário deve ser apagado do sistema

Cenário 1: Deletar usuário existente
DADO um usuário existente na base
QUANDO solicitada a deleção do usuário via endpoint ‘/account/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 200 - OK
E o usuário deve ser deletado

Cenário 2: Deletar usuário inexistente
DADO um usuário inexistente na base
QUANDO solicitada a deleção do usuário via endpoint ‘/account/todo/{todoId}’
ENTÃO a requisição deve retornar HTTP statusCode 4XX
E uma mensagem de erro deve ser retornada

————————————————————————————————————————————